{"version":3,"file":"static/js/839.c6ab6b68.chunk.js","mappings":"kg20GAQMA,EAAqCA,KACvC,MAAMC,EAAQC,EAAqBC,KAAUC,IAAS,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACjD,MAAO,CACHC,IAAK,CACDC,OAA4B,QAAtBT,EAAM,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAO,qBAAa,IAAAC,EAAAA,EAAI,KAChCU,KAA0B,QAAtBT,EAAM,OAAJF,QAAI,IAAJA,OAAI,EAAJA,EAAO,qBAAa,IAAAE,EAAAA,EAAI,KAC9BU,OAA4B,QAAtBT,EAAM,OAAJH,QAAI,IAAJA,OAAI,EAAJA,EAAO,qBAAa,IAAAG,EAAAA,EAAI,KAChCU,MAA0B,QAArBT,EAAM,OAAJJ,QAAI,IAAJA,OAAI,EAAJA,EAAO,oBAAY,IAAAI,EAAAA,EAAI,KAC9BU,OAA6B,QAAvBT,EAAM,OAAJL,QAAI,IAAJA,OAAI,EAAJA,EAAO,sBAAc,IAAAK,EAAAA,EAAI,KACjCU,OAA6B,QAAvBT,EAAM,OAAJN,QAAI,IAAJA,OAAI,EAAJA,EAAO,sBAAc,IAAAM,EAAAA,EAAI,KACjCU,OAA6B,QAAvBT,EAAM,OAAJP,QAAI,IAAJA,OAAI,EAAJA,EAAO,sBAAc,IAAAO,EAAAA,EAAI,KACjCU,KAAwB,QAApBT,EAAM,OAAJR,QAAI,IAAJA,OAAI,EAAJA,EAAO,mBAAW,IAAAQ,EAAAA,EAAI,KAC5BU,QAASlB,EAAK,aAElBmB,SAAU,CACNC,MAAOpB,EAAKqB,KAAKC,KACjBC,OAAQC,EAAYxB,EAAKqB,KAAKE,QAC9BE,MAAOC,EAAW1B,EAAKqB,KAAKI,OAC5BE,KAAMC,OAAO5B,EAAKqB,KAAKM,OAE9B,IAGCE,EAAS,IAAIC,IAAIjC,EAAME,KAAIC,GAAQA,EAAKmB,SAASM,SAEvD,MAAO,CACH5B,MAAOA,EACPgC,OAAQ,IAAIA,GACf,EAGL,SAASL,EAAYD,GACjB,MAAe,gBAAXA,EAAiC,cAE9BA,CACX,CAEA,SAASG,EAAWD,GAChB,MAAc,iBAAVA,GAAsC,gBAAVA,EAAgC,eAClD,aAAVA,EAA6B,WAE1BA,CACX,C","sources":["tools/music-player/logic/MusicIndex.ts"],"sourcesContent":["import { Song } from \"../data/Song\";\r\nimport musicPlayerIndexJson from '../data/music-player-index.json';\r\n\r\nexport interface MusicIndex {\r\n    songs: Song[];\r\n    genres: string[];\r\n}\r\n\r\nconst createMusicIndex: () => MusicIndex = () => {\r\n    const songs = musicPlayerIndexJson.map<Song>(song => {\r\n        return {\r\n            ids: {\r\n                guitar: song?.['guitar.ogg'] ?? null,\r\n                bass: song?.['rhythm.ogg'] ?? null,\r\n                vocals: song?.['vocals.ogg'] ?? null,\r\n                drums: song?.['drums.ogg'] ?? null,\r\n                drums1: song?.['drums_1.ogg'] ?? null,\r\n                drums2: song?.['drums_2.ogg'] ?? null,\r\n                drums3: song?.['drums_3.ogg'] ?? null,\r\n                keys: song?.['keys.ogg'] ?? null,\r\n                backing: song['song.ogg']\r\n            },\r\n            metadata: {\r\n                title: song.meta.name,\r\n                artist: cleanArtist(song.meta.artist),\r\n                genre: cleanGenre(song.meta.genre),\r\n                year: Number(song.meta.year)\r\n            }\r\n        };\r\n    });\r\n\r\n    const genres = new Set(songs.map(song => song.metadata.genre));\r\n\r\n    return {\r\n        songs: songs,\r\n        genres: [...genres]\r\n    };\r\n};\r\n\r\nfunction cleanArtist(artist: string): string {\r\n    if (artist === 'Dragonforce') return 'DragonForce';\r\n\r\n    return artist;\r\n}\r\n\r\nfunction cleanGenre(genre: string): string {\r\n    if (genre === 'CLassic Rock' || genre === 'Classicrock') return 'Classic Rock';\r\n    if (genre === 'Nu-Metal') return 'Nu Metal';\r\n\r\n    return genre;\r\n}\r\n\r\nexport { createMusicIndex };\r\n"],"names":["createMusicIndex","songs","musicPlayerIndexJson","map","song","_song$guitarOgg","_song$rhythmOgg","_song$vocalsOgg","_song$drumsOgg","_song$drums_1Ogg","_song$drums_2Ogg","_song$drums_3Ogg","_song$keysOgg","ids","guitar","bass","vocals","drums","drums1","drums2","drums3","keys","backing","metadata","title","meta","name","artist","cleanArtist","genre","cleanGenre","year","Number","genres","Set"],"sourceRoot":""}